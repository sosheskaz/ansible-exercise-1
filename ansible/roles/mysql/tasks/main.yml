---
- include_vars:      secrets.yml

- name:              install yum dependencies
  yum:               name={{ item }} state=present
  with_items:        '{{ mysql_dependencies.yum }}'

- name:              install pip dependencies
  pip:               name={{ item }} state=present
  with_items:        '{{ mysql_dependencies.pip }}'

- name:              install mysql docker package
  docker_container:
    name:            MySQL
    image:           mysql/mysql-server
    user:            mysql
    env:
      MYSQL_ROOT_PASSWORD={{ mysql_root_password }}
      MYSQL_ROOT_HOST={{ docker_gateway_ip }}
    exposed_ports:
      - 3306
    state:           stopped
- name:              copy mysql my.cnf to temp directory
  template:          src=my.cnf dest=/tmp/docker.my.cnf
- name:              copy my.cnf to mysql docker container
  shell:             docker cp /tmp/docker.my.cnf MySQL:/etc/my.cnf
- name:              (re)start mysql docker
  docker_container:
    name:            MySQL
    user:            mysql
    state:           started

- name:              get mysql container id
  shell:             docker inspect MySQL | jq '.[0] | .Id' | cut -d '"' -f 2
  register:          docker_mysql_id_stdout
- name:              store mysql container id
  set_fact:
    docker_mysql_id: '{{ docker_mysql_id_stdout.stdout }}'

# This doesn't work if you don't escape the single quotes. It might be a bug in
# ansible, or there may be something wrong with my formatting.
# Another note: While this looks a bit ugly, it's ultimately cleaner than using
# the appropriate ansible modules.
- name:              get mysql container ip
  shell:             "docker network inspect bridge | jq \'.[0] | .Containers | .[\"{{docker_mysql_id}}\"] | .IPv4Address\' | cut -d \'\"\' -f 2 | cut -d \'/\' -f 1"
  register:          docker_mysql_ip_stdout
- name:              store mysql container ip
  set_fact:
    docker_mysql_ip: '{{ docker_mysql_ip_stdout.stdout }}'
